apiVersion: v1
kind: Namespace
metadata:
  name: louper-staging
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: louper-staging
  namespace: louper-staging
  labels:
    app: louper-staging
spec:
  replicas: 1
  selector:
    matchLabels:
      app: louper-staging
  template:
    metadata:
      labels:
        app: louper-staging
    spec:
      containers:
        - name: louper-container-staging
          image: mark3labs/louper-web:staging
          volumeMounts:
            - mountPath: '/app/data'
              name: volume
          imagePullPolicy: Always
      volumes:
        - name: volume
          persistentVolumeClaim:
            claimName: louper-staging-db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: louper-staging-db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: batch/v1
kind: Job
metadata:
  generatedName: build-image-and-push-
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: HookSucceeded
spec:
  template:
    spec:
      containers:
        - name: kaniko
          args:
            - --context=git://github.com/mark3labs/louper-v3/#refs/heads/dev
            - --dockerfile=Dockerfile
            - --destination=mark3labs/louper-web:staging
            - --cache=true
            - --use-new-run
            - --single-snapshot
            - --compressed-caching=false
          image: gcr.io/kaniko-project/executor:latest
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /kaniko/.docker
              name: docker-config
              readOnly: true
          resources:
            limits:
              cpu: 1
              memory: 1Gi
      restartPolicy: Never
      volumes:
        - name: docker-config
          secret:
            secretName: regcred
            items:
              - key: .dockerconfigjson
                path: config.json
